- name: install binary
  get_url:
    url: '{{ gitea_binary_url }}'
    dest: /usr/local/bin/gitea
    checksum: 'sha256:{{ lookup("url", gitea_checksum_url).split(" ")[0] }}'
    owner: root
    group: root
    mode: 0755
  notify: restart gitea
  tags: gitea

- name: create group
  group:
    name: '{{ gitea_group }}'
    gid: '{{ gitea_gid }}'
  tags: gitea

- name: create user
  user:
    name: '{{ gitea_user }}'
    group: '{{ gitea_group }}'
    uid: '{{ gitea_uid }}'
    home: '{{ gitea_home }}'
    shell: /bin/bash
  tags: gitea

- name: create data directory
  file:
    path: '{{ item }}'
    owner: '{{ gitea_user }}'
    group: '{{ gitea_group }}'
    mode: 0750
    state: directory
  with_items:
    - '{{ gitea_home }}'
    - '{{ gitea_home }}/data'
    - '{{ gitea_repository_directory }}'
    - '{{ gitea_log_directory }}'
  tags: gitea

- name: test if config.ini exist
  stat:
    path: '{{ gitea_home }}/data/config.ini'
  register: st
  tags: gitea

- name: set properties for config file
  file:
    path: '{{ gitea_home }}/data/config.ini'
    owner: root
    group: '{{ gitea_group }}'
    mode: 0640
  when: st.stat.exists
  tags: gitea

- name: create an empty config file
  file:
    path: '{{ gitea_home }}/data/config.ini'
    owner: '{{ gitea_user }}'
    group: '{{ gitea_group }}'
    mode: 0640
    state: touch
  when: not st.stat.exists
  tags: gitea

- name: create service
  template:
    src: gitea.service.j2
    dest: /etc/systemd/system/gitea.service
    owner: root
    group: root
    mode: 0644
  tags: gitea

- name: enable and start service
  systemd:
    name: gitea
    enabled: yes
    state: started
    daemon_reload: yes
  tags: gitea
